{"version":3,"sources":["components/List.js","components/SearchBar.js","App.js","index.js"],"names":["List","props","className","onClick","params","search","filteredList","map","item","src","picture","medium","alt","name","first","last","phone","href","email","date","dob","Date","toLocaleDateString","month","day","year","id","value","SearchBar","useState","searchVal","setSearchVal","onChange","e","target","console","log","filteredData","original","directoryList","filter","employee","toLowerCase","includes","setFilteredList","placeholder","App","renderReady","setRenderReady","setDirectoryList","getData","a","Axios","get","response","data","results","Object","values","alert","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAkDeA,EAlDF,SAACC,GAcb,OACC,sBAAKC,UAAU,gBAAf,UACC,yCAEA,wBAAOA,UAAU,QAAjB,UACC,gCACC,+BACC,uCACA,oBAAIC,QAZQ,SAACC,KAYb,kBACA,uCACA,uCACA,6CAGF,gCACEH,EAAMI,OAAOC,aAAaC,KAAI,SAACC,GAC/B,OACC,+BACC,6BACC,qBAAKC,IAAKD,EAAKE,QAAQC,OAAQC,IAAG,UAAKJ,EAAKK,KAAKC,MAAf,YAAwBN,EAAKK,KAAKE,UAErE,uCAAQP,EAAKK,KAAKC,MAAlB,YAA2BN,EAAKK,KAAKE,QACrC,6BAAKP,EAAKQ,QACV,6BACC,mBAAGC,KAAI,iBAAYT,EAAKU,OAAxB,SAAkCV,EAAKU,UAExC,8BArCaC,EAqCGX,EAAKY,IAAID,KApCjB,IAAIE,KAAKF,GAGOG,mBAAmB,QADjC,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,iBAyB5CjB,EAAKkB,GAAGC,OA5BJ,IAACR,cCsCNS,EAtCG,SAAC3B,GAAW,IAAD,EAIxB4B,mBAAS,IAJe,mBAE3BC,EAF2B,KAG3BC,EAH2B,KAyB5B,OACC,qBAAK7B,UAAU,SAAf,SACC,uBACCyB,MAAOG,EACPE,SArBkB,SAACC,GAErB,IAAMN,EAAQM,EAAEC,OAAOP,MACvBQ,QAAQC,IAAIT,EAAO,SACnBI,EAAaJ,GAEb,IACMU,EADYpC,EAAMqC,SAASC,cACFC,QAAO,SAACC,GAEtC,OACCA,EAAS5B,KAAKC,MAAM4B,cAAcC,SAAShB,IAAUc,EAAS5B,KAAKE,KAAK2B,cAAcC,SAAShB,MAIjG1B,EAAMI,OAAOuC,gBAAgBP,IAQ3BQ,YAAY,YACZnB,GAAG,SACHb,KAAK,cCmCMiC,MA/Df,WAAe,MAOVjB,oBAAS,GAPC,mBAKbkB,EALa,KAMbC,EANa,OAYVnB,mBAAS,IAZC,mBAUbU,EAVa,KAWbU,EAXa,OAgBVpB,mBAAS,IAhBC,mBAcbvB,EAda,KAebsC,EAfa,KAoBRM,EAAO,uCAAG,8BAAAC,EAAA,+EAGSC,IAAMC,IAC5B,oFAJa,cAGRC,EAHQ,+BAOUA,EAASC,KAAKC,SAPxB,OAORD,EAPQ,OASdN,EAAiBQ,OAAOC,OAAOH,IAC/BX,EAAgBa,OAAOC,OAAOH,IAVhB,kDAYdI,MAAM,EAAD,IAZS,0DAAH,qDAyBb,OATAC,qBAAU,WAETV,IAEAF,GAAe,KACb,IAKF,sBAAK9C,UAAU,MAAf,UACC,yBAAQA,UAAU,aAAlB,UACC,oDACA,4GAED,+BAEE,sBAAKA,UAAU,YAAf,UACC,cAAC,EAAD,CAAWoC,SAAU,CAACC,gBAAcU,oBAAmB5C,OAAQ,CAACC,eAAasC,sBAC5D,IAAhBG,EAAwB,2CAAoB,cAAC,EAAD,CAAMT,SAAU,CAACC,gBAAcU,oBAAmB5C,OAAQ,CAACC,eAAasC,8BC1D3HiB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.923578c7.chunk.js","sourcesContent":["const List = (props) => {\n\t//This renders out\n\n\tconst formatTime = (date) => {\n\t\tlet newDate = new Date(date);\n\n\t\tconst options = { month: '2-digit', day: '2-digit', year: 'numeric' };\n\t\tconst formattedDate = newDate.toLocaleDateString('en-US', options);\n\t\treturn formattedDate;\n\t};\n\tconst sortName = (params) => {\n\t\t\n\t}\n\t// console.log(props, \"List Props\")\n\treturn (\n\t\t<div className=\"employee-list\">\n\t\t\t<h3>Results</h3>\n\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Image</th>\n\t\t\t\t\t\t<th onClick={sortName}>Name</th>\n\t\t\t\t\t\t<th>Phone</th>\n\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t<th>D.O.B.</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{props.search.filteredList.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={item.id.value}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<img src={item.picture.medium} alt={`${item.name.first} ${item.name.last}`} />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{`${item.name.first} ${item.name.last}`}</td>\n\t\t\t\t\t\t\t\t<td>{item.phone}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href={`mailto:${item.email}`}>{item.email}</a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{formatTime(item.dob.date)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default List;\n","// eslint-disable-next-line\nimport react, {useState} from \"react\"\n\nconst SearchBar = (props) => {\n\tconst [\n\t\tsearchVal,\n\t\tsetSearchVal\n\t] = useState('');\n\t\n\t// console.log(props.search.filteredList,\"filteredList\")\n\t// console.log(props.original.directoryList,\"directoryList\")\n\tconst updateInput =  (e) => {\n\t//Searching through the directory for matches to the first first name or last name, take them out and put them in a var filtered\n\t\tconst value = e.target.value;\n\t\tconsole.log(value, \"Value\")\n\t\tsetSearchVal(value);\n\t\t\n\t\tconst employees = props.original.directoryList\n\t\tconst filteredData = employees.filter((employee) => {\n\t\t\t// console.log(employee)\n\t\t\treturn (\n\t\t\t\temployee.name.first.toLowerCase().includes(value) || employee.name.last.toLowerCase().includes(value)\n\t\t\t);\n\t\t});\n\n\t\tprops.search.setFilteredList(filteredData);\n\t};\n\n\treturn (\n\t\t<div className=\"search\">\n\t\t\t<input\n\t\t\t\tvalue={searchVal}\n\t\t\t\tonChange={updateInput}\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\tid=\"search\"\n\t\t\t\tname=\"search\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport './App.css';\n// eslint-disable-next-line\nimport List from './components/List';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n\t// setting our state\n\n\tconst [\n\t\t// eslint-disable-next-line\n\t\trenderReady,\n\t\tsetRenderReady\n\t] = useState(false);\n\t\n\tconst [\n\t\tdirectoryList,\n\t\tsetDirectoryList\n\t] = useState([]);\n\tconst [\n\t\tfilteredList,\n\t\tsetFilteredList\n\t] = useState([]);\n\t// Function used for instant search functionality. We call this onChange on the input itself.\n\n\t// Setting up API call\n\tconst getData = async () => {\n\t\ttry {\n\t\t\t// fetch data from a url endpoint\n\t\t\tconst response = await Axios.get(\n\t\t\t\t'https://randomuser.me/api/?results=50&inc=id,picture,name,phone,email,dob&nat=us'\n\t\t\t);\n\n\t\t\tconst data = await { ...response.data.results };\n\n\t\t\tsetDirectoryList(Object.values(data));\n\t\t\tsetFilteredList(Object.values(data));\n\t\t} catch (error) {\n\t\t\talert(error); // catches both errors\n\t\t}\n\t};\n\t// Here we are retrieving data when the app is first loaded\n\tuseEffect(() => {\n\t\t// fetch data from a url endpoint\n\t\tgetData();\n\t\t// setFilteredList(directoryList);\n\t\tsetRenderReady(true);\n\t}, []);\n\n\t// updateInput(searchValue);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Employee Directory</h1>\n\t\t\t\t<p>Use the search box, or click on a column heading to sort by that column.</p>\n\t\t\t</header>\n\t\t\t<main>\n\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<SearchBar original={{directoryList,setDirectoryList}} search={{filteredList,setFilteredList}} />\n\t\t\t\t\t\t{renderReady === false ? <p>Loading...</p> : <List original={{directoryList,setDirectoryList}} search={{filteredList,setFilteredList}} />}\n\t\t\t\t\t</div>\n\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// What needs to be done:\n// - Get HTML template setup and css done\n// - Setup two visual components\n//   - Listitem.js\n//   - List.js\n//\n// - setup API component\n// - Get Mini Project finished files for reference, though I think they are making it more complicated than we might need\n"],"sourceRoot":""}